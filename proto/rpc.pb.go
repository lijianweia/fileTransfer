// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	Request
	FileRequest
	ReadRequest
	ReadResponse
	StatResponse
	Response
	Md5Response
	WriteResponse
	WriteRequest
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Request 请求结构
type Request struct {
	Id int64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// FileRequest 响应结构
type FileRequest struct {
	Filename string `protobuf:"bytes,1,opt,name=Filename" json:"Filename,omitempty"`
}

func (m *FileRequest) Reset()                    { *m = FileRequest{} }
func (m *FileRequest) String() string            { return proto1.CompactTextString(m) }
func (*FileRequest) ProtoMessage()               {}
func (*FileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// ReadRequest 响应结构
type ReadRequest struct {
	Id     int64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=Offset" json:"Offset,omitempty"`
	Size   int64 `protobuf:"varint,3,opt,name=Size" json:"Size,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReadRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

// ReadResponse 响应结构
type ReadResponse struct {
	Size int64  `protobuf:"varint,1,opt,name=Size" json:"Size,omitempty"`
	Date []byte `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	EOF  bool   `protobuf:"varint,3,opt,name=EOF" json:"EOF,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ReadResponse) GetDate() []byte {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *ReadResponse) GetEOF() bool {
	if m != nil {
		return m.EOF
	}
	return false
}

// StateResponse 响应结构
type StatResponse struct {
	Type         string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Size         int64  `protobuf:"varint,2,opt,name=Size" json:"Size,omitempty"`
	LastModified string `protobuf:"bytes,3,opt,name=LastModified" json:"LastModified,omitempty"`
}

func (m *StatResponse) Reset()                    { *m = StatResponse{} }
func (m *StatResponse) String() string            { return proto1.CompactTextString(m) }
func (*StatResponse) ProtoMessage()               {}
func (*StatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StatResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StatResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StatResponse) GetLastModified() string {
	if m != nil {
		return m.LastModified
	}
	return ""
}

// StateResponse 响应结构
type Response struct {
	Id     int64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Result bool  `protobuf:"varint,2,opt,name=Result" json:"Result,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Response) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Response) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// StateResponse 响应结构
type Md5Response struct {
	Md5Sum string `protobuf:"bytes,1,opt,name=md5sum" json:"md5sum,omitempty"`
}

func (m *Md5Response) Reset()                    { *m = Md5Response{} }
func (m *Md5Response) String() string            { return proto1.CompactTextString(m) }
func (*Md5Response) ProtoMessage()               {}
func (*Md5Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Md5Response) GetMd5Sum() string {
	if m != nil {
		return m.Md5Sum
	}
	return ""
}

// ReadRequest 响应结构
type WriteResponse struct {
	Size   int64 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=Offset" json:"Offset,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto1.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *WriteResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *WriteResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// ReadResponse 响应结构
type WriteRequest struct {
	Id     int64  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Date   []byte `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=Offset" json:"Offset,omitempty"`
	Size   int64  `protobuf:"varint,4,opt,name=Size" json:"Size,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto1.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *WriteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WriteRequest) GetDate() []byte {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *WriteRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*FileRequest)(nil), "proto.FileRequest")
	proto1.RegisterType((*ReadRequest)(nil), "proto.ReadRequest")
	proto1.RegisterType((*ReadResponse)(nil), "proto.ReadResponse")
	proto1.RegisterType((*StatResponse)(nil), "proto.StatResponse")
	proto1.RegisterType((*Response)(nil), "proto.Response")
	proto1.RegisterType((*Md5Response)(nil), "proto.Md5Response")
	proto1.RegisterType((*WriteResponse)(nil), "proto.WriteResponse")
	proto1.RegisterType((*WriteRequest)(nil), "proto.WriteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileTransfer service

type FileTransferClient interface {
	Md5Sum(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*Md5Response, error)
	Open(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*Response, error)
	Close(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Stat(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*StatResponse, error)
	ReadAt(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	WriteAt(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
}

type fileTransferClient struct {
	cc *grpc.ClientConn
}

func NewFileTransferClient(cc *grpc.ClientConn) FileTransferClient {
	return &fileTransferClient{cc}
}

func (c *fileTransferClient) Md5Sum(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*Md5Response, error) {
	out := new(Md5Response)
	err := grpc.Invoke(ctx, "/proto.fileTransfer/md5sum", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferClient) Open(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.fileTransfer/Open", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferClient) Close(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.fileTransfer/Close", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferClient) Stat(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*StatResponse, error) {
	out := new(StatResponse)
	err := grpc.Invoke(ctx, "/proto.fileTransfer/Stat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferClient) ReadAt(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/proto.fileTransfer/ReadAt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferClient) WriteAt(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := grpc.Invoke(ctx, "/proto.fileTransfer/WriteAt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileTransfer service

type FileTransferServer interface {
	Md5Sum(context.Context, *FileRequest) (*Md5Response, error)
	Open(context.Context, *FileRequest) (*Response, error)
	Close(context.Context, *Request) (*Response, error)
	Stat(context.Context, *FileRequest) (*StatResponse, error)
	ReadAt(context.Context, *ReadRequest) (*ReadResponse, error)
	WriteAt(context.Context, *WriteRequest) (*WriteResponse, error)
}

func RegisterFileTransferServer(s *grpc.Server, srv FileTransferServer) {
	s.RegisterService(&_FileTransfer_serviceDesc, srv)
}

func _FileTransfer_Md5Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServer).Md5Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.fileTransfer/Md5Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServer).Md5Sum(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransfer_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.fileTransfer/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServer).Open(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransfer_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.fileTransfer/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServer).Close(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransfer_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.fileTransfer/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServer).Stat(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransfer_ReadAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServer).ReadAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.fileTransfer/ReadAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServer).ReadAt(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransfer_WriteAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServer).WriteAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.fileTransfer/WriteAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServer).WriteAt(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileTransfer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.fileTransfer",
	HandlerType: (*FileTransferServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "md5sum",
			Handler:    _FileTransfer_Md5Sum_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _FileTransfer_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _FileTransfer_Close_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _FileTransfer_Stat_Handler,
		},
		{
			MethodName: "ReadAt",
			Handler:    _FileTransfer_ReadAt_Handler,
		},
		{
			MethodName: "WriteAt",
			Handler:    _FileTransfer_WriteAt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto1.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xcf, 0x6b, 0xf2, 0x40,
	0x10, 0xd5, 0x24, 0x6a, 0x1c, 0xf3, 0xfd, 0x60, 0xbf, 0x0f, 0xb1, 0x9e, 0xca, 0x42, 0xa1, 0x2d,
	0x54, 0xa8, 0x62, 0x2f, 0x3d, 0x49, 0x5b, 0xa9, 0x50, 0x11, 0x56, 0xa1, 0xd0, 0x43, 0x21, 0xed,
	0x4e, 0x20, 0x10, 0x93, 0x34, 0xbb, 0x1e, 0xda, 0xff, 0xad, 0xff, 0x5b, 0xc9, 0x9a, 0x6c, 0x56,
	0x88, 0xa7, 0xcc, 0xbc, 0xbc, 0xf7, 0xd8, 0x79, 0x33, 0xd0, 0xcd, 0xd2, 0xf7, 0x51, 0x9a, 0x25,
	0x32, 0x21, 0x2d, 0xf5, 0xa1, 0x27, 0xd0, 0x61, 0xf8, 0xb1, 0x43, 0x21, 0xc9, 0x6f, 0xb0, 0x16,
	0x7c, 0xd0, 0x3c, 0x6d, 0x9e, 0xdb, 0xcc, 0x5a, 0x70, 0x7a, 0x01, 0xbd, 0x79, 0x18, 0x61, 0xf9,
	0x7b, 0x08, 0x6e, 0xde, 0xc6, 0xfe, 0x16, 0x15, 0xa9, 0xcb, 0x74, 0x4f, 0x17, 0xd0, 0x63, 0xe8,
	0xf3, 0x23, 0x4e, 0xa4, 0x0f, 0xed, 0x55, 0x10, 0x08, 0x94, 0x03, 0x4b, 0x61, 0x45, 0x47, 0x08,
	0x38, 0xeb, 0xf0, 0x0b, 0x07, 0xb6, 0x42, 0x55, 0x4d, 0x1f, 0xc1, 0xdb, 0x5b, 0x89, 0x34, 0x89,
	0x05, 0x6a, 0x4e, 0xb3, 0xe2, 0xe4, 0xd8, 0xbd, 0x2f, 0x51, 0xb9, 0x79, 0x4c, 0xd5, 0xe4, 0x2f,
	0xd8, 0x0f, 0xab, 0xb9, 0xb2, 0x72, 0x59, 0x5e, 0xd2, 0x17, 0xf0, 0xd6, 0xd2, 0x97, 0xa6, 0xd3,
	0xe6, 0x33, 0x2d, 0x1f, 0xaf, 0x6a, 0xed, 0x6e, 0x19, 0xee, 0x14, 0xbc, 0x27, 0x5f, 0xc8, 0x65,
	0xc2, 0xc3, 0x20, 0x44, 0xae, 0x2c, 0xbb, 0xec, 0x00, 0xa3, 0x63, 0x70, 0xb5, 0x6f, 0xcd, 0xb4,
	0x0c, 0xc5, 0x2e, 0xda, 0x4f, 0xeb, 0xb2, 0xa2, 0xa3, 0x67, 0xd0, 0x5b, 0xf2, 0xa9, 0x96, 0xf5,
	0xa1, 0xbd, 0xe5, 0x53, 0xb1, 0xdb, 0x16, 0x0f, 0x2a, 0x3a, 0x7a, 0x0b, 0xbf, 0x9e, 0xb3, 0x50,
	0xa2, 0xf9, 0x6e, 0x61, 0x24, 0x90, 0xd7, 0xc7, 0x12, 0xa5, 0xaf, 0xe0, 0x15, 0xe2, 0xfa, 0x4d,
	0xd4, 0x25, 0x57, 0x79, 0xd9, 0xb5, 0xdb, 0x71, 0xaa, 0x6c, 0xc6, 0xdf, 0x16, 0x78, 0x41, 0x18,
	0xe1, 0x26, 0xf3, 0x63, 0x11, 0x60, 0x46, 0xc6, 0xe5, 0x14, 0x84, 0xec, 0x0f, 0x6b, 0x64, 0xdc,
	0xcc, 0xb0, 0xc4, 0x8c, 0xb9, 0x69, 0x83, 0x5c, 0x81, 0xb3, 0x4a, 0x31, 0xae, 0x55, 0xfc, 0x29,
	0x30, 0x83, 0x7e, 0x09, 0xad, 0xbb, 0x28, 0xc9, 0x83, 0xd6, 0xff, 0x8e, 0x72, 0xaf, 0xc1, 0xc9,
	0x77, 0x5e, 0x6b, 0xfd, 0xaf, 0xc0, 0xcc, 0xa3, 0xa0, 0x0d, 0x32, 0xc9, 0xd7, 0xe5, 0xf3, 0x59,
	0x25, 0x32, 0x4e, 0x59, 0x8b, 0xcc, 0x9b, 0xa4, 0x0d, 0x72, 0x03, 0x1d, 0x95, 0xf3, 0x4c, 0x92,
	0x92, 0x61, 0xe6, 0x3e, 0xfc, 0x7f, 0x08, 0x96, 0xba, 0xb7, 0xb6, 0x82, 0x27, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x2a, 0x75, 0xba, 0xbe, 0x89, 0x03, 0x00, 0x00,
}
